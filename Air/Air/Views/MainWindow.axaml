<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:Air.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="Air.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/avalonia-logo.ico"
        Title="Air">
    
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Dark">
                    <Bitmap x:Key="ThemeVariantIcon">/Assets/dark-mode.png</Bitmap>
                    <SolidColorBrush x:Key="BackgroundBrush" Color="{Binding DarkThemeBackgroundColor}"></SolidColorBrush>
                </ResourceDictionary>
                <ResourceDictionary x:Key="Light">
                    <Bitmap x:Key="ThemeVariantIcon">/Assets/light-mode.png</Bitmap>
                    <SolidColorBrush x:Key="BackgroundBrush">WhiteSmoke</SolidColorBrush>
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <vm:MainWindowViewModel/>
    </Design.DataContext>
    
    <Window.Styles>
        <Style Selector="Window">
            <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        </Style>
    </Window.Styles>

    <Panel>
        <Button HorizontalAlignment="Right" VerticalAlignment="Bottom"
                Click="ThemeButton_OnClick">
            <Image Width="16" Height="16" Source="{DynamicResource ThemeVariantIcon}"/>
        </Button>
        
        <StackPanel HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Spacing="25"
                    x:Name="MainPanel">
            <StackPanel Spacing="25" Orientation="Horizontal">
                <Button Click="OpenCreateRoomPanel_OnClick" Content="Create Room" />
                <Button Click="OpenJoinRoomPanel_OnClick" Content="Join Room"/>
            </StackPanel>

            <Button HorizontalAlignment="Center"
                    Content="Audio Settings"
                    Click="AudioSettings_OnClick"
                    Command="{Binding LoadAudioDevicesInfo}"/>
        </StackPanel>
        
        <StackPanel HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    IsVisible="False"
                    Spacing="25"
                    x:Name="JoinRoomPanel"
                    DataContext="{Binding JoinRoomPanelVM}">
            <StackPanel
                HorizontalAlignment="Center"
                Spacing="5"
                Orientation="Horizontal">
                <TextBox Text="{Binding NameOfRoomToJoin}"
                         Width="200" Watermark="Please enter room name"
                         x:Name="JoinRoomTextBox"/>
                <Button Content="Join" Click="JoinRoom_OnClick" x:Name="JoinRoomButton"
                        Command="{Binding JoinCommand}" CommandParameter="{Binding #JoinRoomTextBox.Text}"/>
            </StackPanel>
            <Button HorizontalAlignment="Center" Content="Go Back" Click="GoBackFromJoinRoom_OnClick"/>
        </StackPanel>
        
        <StackPanel HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    IsVisible="False"
                    Spacing="25"
                    x:Name="CallPanel"
                    DataContext="{Binding CallPanelVM}">
            <ListBox ItemsSource="{Binding ChatMessages}" HorizontalAlignment="Center">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="{Binding Sender}"/>
                            <Label Content="{Binding Message}"/>
                            <Label Content="{Binding MessageTime.TimeOfDay}"/>
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <StackPanel Orientation="Horizontal" Spacing="5" HorizontalAlignment="Center">
                <TextBox Text="{Binding UserMessage}" Width="200" Watermark="your message"
                         x:Name="UserMessageTextBox"/>
                <Button Content="Send" Command="{Binding SendMessageCommand}"
                        CommandParameter="{Binding #UserMessageTextBox.Text}"/>
            </StackPanel>
            <Button HorizontalAlignment="Center" Content="Leave" Click="LeaveCall_OnClick"
                    Command="{Binding LeaveRoomCommand}"/>
        </StackPanel>
        
        <StackPanel HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    IsVisible="False"
                    Spacing="25"
                    x:Name="AudioSettingsPanel">
            <StackPanel HorizontalAlignment="Center"
                        Orientation="Horizontal"
                        Spacing="5">
                <TextBlock VerticalAlignment="Center">Output Device</TextBlock>
                <Button Content="{Binding SelectedOutputDevice.Header, FallbackValue=No Devices Found}"
                        x:Name="OutputDevicesMenu">
                    <Button.Flyout>
                        <MenuFlyout ItemsSource="{Binding OutputDevices}">
                            <MenuFlyout.ItemContainerTheme>
                                <ControlTheme TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}"
                                              x:DataType="vm:AudioDeviceItemViewModel">
                                    <Setter Property="Header" Value="{Binding Header}"/>
                                    <Setter Property="Command" Value="{Binding Command}"/>
                                </ControlTheme>
                            </MenuFlyout.ItemContainerTheme>
                        </MenuFlyout>
                    </Button.Flyout>
                </Button>
            </StackPanel>
            
            <StackPanel HorizontalAlignment="Center"
                        Orientation="Horizontal"
                        Spacing="5">
                <TextBlock VerticalAlignment="Center">Input Device</TextBlock>
                <Button Content="{Binding SelectedInputDevice.Header, FallbackValue=No Devices Found}"
                        x:Name="InputDevicesMenu">
                    <Button.Flyout>
                        <MenuFlyout ItemsSource="{Binding InputDevices}">
                            <MenuFlyout.ItemContainerTheme>
                                <ControlTheme TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}"
                                              x:DataType="vm:AudioDeviceItemViewModel">
                                    <Setter Property="Header" Value="{Binding Header}"/>
                                    <Setter Property="Command" Value="{Binding Command}"/>
                                </ControlTheme>
                            </MenuFlyout.ItemContainerTheme>
                        </MenuFlyout>
                    </Button.Flyout>
                </Button>
            </StackPanel>
            
            <Button HorizontalAlignment="Center" Content="{Binding CheckAudioButtonText}"
                    Command="{Binding SwitchAudioMonitoring}" />
            
            <Button HorizontalAlignment="Center"
                    Content="Go Back" Click="GoBackFromAudioSettings_OnClick"
                    Command="{Binding EnsureStopAudioMonitoring}" />
        </StackPanel>
    </Panel>

</Window>
